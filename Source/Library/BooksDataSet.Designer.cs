//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Library {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("BooksDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class BooksDataSet : global::System.Data.DataSet {
        
        private Book2DataTable tableBook2;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public BooksDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected BooksDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Book2"] != null)) {
                    base.Tables.Add(new Book2DataTable(ds.Tables["Book2"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Book2DataTable Book2 {
            get {
                return this.tableBook2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            BooksDataSet cln = ((BooksDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Book2"] != null)) {
                    base.Tables.Add(new Book2DataTable(ds.Tables["Book2"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableBook2 = ((Book2DataTable)(base.Tables["Book2"]));
            if ((initTable == true)) {
                if ((this.tableBook2 != null)) {
                    this.tableBook2.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitClass() {
            this.DataSetName = "BooksDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/BooksDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableBook2 = new Book2DataTable();
            base.Tables.Add(this.tableBook2);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeBook2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            BooksDataSet ds = new BooksDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void Book2RowChangeEventHandler(object sender, Book2RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Book2DataTable : global::System.Data.TypedTableBase<Book2Row> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnAuthor;
            
            private global::System.Data.DataColumn columnAuthorSign;
            
            private global::System.Data.DataColumn columnMainTitle;
            
            private global::System.Data.DataColumn columnGeneralMaterialDesignation;
            
            private global::System.Data.DataColumn columnParallelTitle;
            
            private global::System.Data.DataColumn columnInformationPertainingToTheTitle;
            
            private global::System.Data.DataColumn columnFirstInformationOnLiability;
            
            private global::System.Data.DataColumn columnFurtherInformationOnLiability;
            
            private global::System.Data.DataColumn columnInformationOnThePublication;
            
            private global::System.Data.DataColumn columnParallelInformationAboutThePublication;
            
            private global::System.Data.DataColumn columnFirstInformationOnLiabilityRelatingPublication;
            
            private global::System.Data.DataColumn columnFurtherInformationOnLiabilityRelatingPublication;
            
            private global::System.Data.DataColumn columnAdditionalInformationAboutPublication;
            
            private global::System.Data.DataColumn columnFirstInformationOnLiabilityRelatingToAdditionalInformationPublication;
            
            private global::System.Data.DataColumn columnFurtherInformationOnLiabilityRelatingToAdditionalInformationPublication;
            
            private global::System.Data.DataColumn columnPlacePublication;
            
            private global::System.Data.DataColumn columnFirstPlacePublication;
            
            private global::System.Data.DataColumn columnSubsequentPlacePublication;
            
            private global::System.Data.DataColumn columnNamePublisherDistributor;
            
            private global::System.Data.DataColumn columnInformationAboutFunctionsPublisher;
            
            private global::System.Data.DataColumn columnDatePublication;
            
            private global::System.Data.DataColumn columnPlaceManufacture;
            
            private global::System.Data.DataColumn columnManufacturerName;
            
            private global::System.Data.DataColumn columnDateManufacture;
            
            private global::System.Data.DataColumn columnSpecificDesignationMaterialAndVolume;
            
            private global::System.Data.DataColumn columnOtherInformationAboutPhysicalCharacteristics;
            
            private global::System.Data.DataColumn columnDimensions;
            
            private global::System.Data.DataColumn columnInformationAccompanyingMaterial;
            
            private global::System.Data.DataColumn columnTitleSeries;
            
            private global::System.Data.DataColumn columnParallelTitleSeries;
            
            private global::System.Data.DataColumn columnInformationPertainingTitleSeries;
            
            private global::System.Data.DataColumn columnFirstInformationAboutLiabilityRelatedSeries;
            
            private global::System.Data.DataColumn columnSubsequentLiabilityInformationRelatingSeries;
            
            private global::System.Data.DataColumn columnISSN;
            
            private global::System.Data.DataColumn columnIssueNumberSeries;
            
            private global::System.Data.DataColumn columnISBN;
            
            private global::System.Data.DataColumn columnBBK;
            
            private global::System.Data.DataColumn columnPrice;
            
            private global::System.Data.DataColumn columnAddData;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Book2DataTable() {
                this.TableName = "Book2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal Book2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected Book2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AuthorColumn {
                get {
                    return this.columnAuthor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AuthorSignColumn {
                get {
                    return this.columnAuthorSign;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MainTitleColumn {
                get {
                    return this.columnMainTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GeneralMaterialDesignationColumn {
                get {
                    return this.columnGeneralMaterialDesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ParallelTitleColumn {
                get {
                    return this.columnParallelTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn InformationPertainingToTheTitleColumn {
                get {
                    return this.columnInformationPertainingToTheTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FirstInformationOnLiabilityColumn {
                get {
                    return this.columnFirstInformationOnLiability;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FurtherInformationOnLiabilityColumn {
                get {
                    return this.columnFurtherInformationOnLiability;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn InformationOnThePublicationColumn {
                get {
                    return this.columnInformationOnThePublication;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ParallelInformationAboutThePublicationColumn {
                get {
                    return this.columnParallelInformationAboutThePublication;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FirstInformationOnLiabilityRelatingPublicationColumn {
                get {
                    return this.columnFirstInformationOnLiabilityRelatingPublication;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FurtherInformationOnLiabilityRelatingPublicationColumn {
                get {
                    return this.columnFurtherInformationOnLiabilityRelatingPublication;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AdditionalInformationAboutPublicationColumn {
                get {
                    return this.columnAdditionalInformationAboutPublication;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FirstInformationOnLiabilityRelatingToAdditionalInformationPublicationColumn {
                get {
                    return this.columnFirstInformationOnLiabilityRelatingToAdditionalInformationPublication;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FurtherInformationOnLiabilityRelatingToAdditionalInformationPublicationColumn {
                get {
                    return this.columnFurtherInformationOnLiabilityRelatingToAdditionalInformationPublication;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PlacePublicationColumn {
                get {
                    return this.columnPlacePublication;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FirstPlacePublicationColumn {
                get {
                    return this.columnFirstPlacePublication;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SubsequentPlacePublicationColumn {
                get {
                    return this.columnSubsequentPlacePublication;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NamePublisherDistributorColumn {
                get {
                    return this.columnNamePublisherDistributor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn InformationAboutFunctionsPublisherColumn {
                get {
                    return this.columnInformationAboutFunctionsPublisher;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DatePublicationColumn {
                get {
                    return this.columnDatePublication;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PlaceManufactureColumn {
                get {
                    return this.columnPlaceManufacture;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ManufacturerNameColumn {
                get {
                    return this.columnManufacturerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DateManufactureColumn {
                get {
                    return this.columnDateManufacture;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SpecificDesignationMaterialAndVolumeColumn {
                get {
                    return this.columnSpecificDesignationMaterialAndVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OtherInformationAboutPhysicalCharacteristicsColumn {
                get {
                    return this.columnOtherInformationAboutPhysicalCharacteristics;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DimensionsColumn {
                get {
                    return this.columnDimensions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn InformationAccompanyingMaterialColumn {
                get {
                    return this.columnInformationAccompanyingMaterial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TitleSeriesColumn {
                get {
                    return this.columnTitleSeries;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ParallelTitleSeriesColumn {
                get {
                    return this.columnParallelTitleSeries;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn InformationPertainingTitleSeriesColumn {
                get {
                    return this.columnInformationPertainingTitleSeries;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FirstInformationAboutLiabilityRelatedSeriesColumn {
                get {
                    return this.columnFirstInformationAboutLiabilityRelatedSeries;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SubsequentLiabilityInformationRelatingSeriesColumn {
                get {
                    return this.columnSubsequentLiabilityInformationRelatingSeries;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ISSNColumn {
                get {
                    return this.columnISSN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IssueNumberSeriesColumn {
                get {
                    return this.columnIssueNumberSeries;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ISBNColumn {
                get {
                    return this.columnISBN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BBKColumn {
                get {
                    return this.columnBBK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AddDataColumn {
                get {
                    return this.columnAddData;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Book2Row this[int index] {
                get {
                    return ((Book2Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Book2RowChangeEventHandler Book2RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Book2RowChangeEventHandler Book2RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Book2RowChangeEventHandler Book2RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Book2RowChangeEventHandler Book2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddBook2Row(Book2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Book2Row AddBook2Row(
                        string Author, 
                        string AuthorSign, 
                        string MainTitle, 
                        string GeneralMaterialDesignation, 
                        string ParallelTitle, 
                        string InformationPertainingToTheTitle, 
                        string FirstInformationOnLiability, 
                        string FurtherInformationOnLiability, 
                        string InformationOnThePublication, 
                        string ParallelInformationAboutThePublication, 
                        string FirstInformationOnLiabilityRelatingPublication, 
                        string FurtherInformationOnLiabilityRelatingPublication, 
                        string AdditionalInformationAboutPublication, 
                        string FirstInformationOnLiabilityRelatingToAdditionalInformationPublication, 
                        string FurtherInformationOnLiabilityRelatingToAdditionalInformationPublication, 
                        string PlacePublication, 
                        string FirstPlacePublication, 
                        string SubsequentPlacePublication, 
                        string NamePublisherDistributor, 
                        string InformationAboutFunctionsPublisher, 
                        string DatePublication, 
                        string PlaceManufacture, 
                        string ManufacturerName, 
                        string DateManufacture, 
                        string SpecificDesignationMaterialAndVolume, 
                        string OtherInformationAboutPhysicalCharacteristics, 
                        string Dimensions, 
                        string InformationAccompanyingMaterial, 
                        string TitleSeries, 
                        string ParallelTitleSeries, 
                        string InformationPertainingTitleSeries, 
                        string FirstInformationAboutLiabilityRelatedSeries, 
                        string SubsequentLiabilityInformationRelatingSeries, 
                        string ISSN, 
                        string IssueNumberSeries, 
                        string ISBN, 
                        string BBK, 
                        string Price, 
                        string AddData) {
                Book2Row rowBook2Row = ((Book2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Author,
                        AuthorSign,
                        MainTitle,
                        GeneralMaterialDesignation,
                        ParallelTitle,
                        InformationPertainingToTheTitle,
                        FirstInformationOnLiability,
                        FurtherInformationOnLiability,
                        InformationOnThePublication,
                        ParallelInformationAboutThePublication,
                        FirstInformationOnLiabilityRelatingPublication,
                        FurtherInformationOnLiabilityRelatingPublication,
                        AdditionalInformationAboutPublication,
                        FirstInformationOnLiabilityRelatingToAdditionalInformationPublication,
                        FurtherInformationOnLiabilityRelatingToAdditionalInformationPublication,
                        PlacePublication,
                        FirstPlacePublication,
                        SubsequentPlacePublication,
                        NamePublisherDistributor,
                        InformationAboutFunctionsPublisher,
                        DatePublication,
                        PlaceManufacture,
                        ManufacturerName,
                        DateManufacture,
                        SpecificDesignationMaterialAndVolume,
                        OtherInformationAboutPhysicalCharacteristics,
                        Dimensions,
                        InformationAccompanyingMaterial,
                        TitleSeries,
                        ParallelTitleSeries,
                        InformationPertainingTitleSeries,
                        FirstInformationAboutLiabilityRelatedSeries,
                        SubsequentLiabilityInformationRelatingSeries,
                        ISSN,
                        IssueNumberSeries,
                        ISBN,
                        BBK,
                        Price,
                        AddData};
                rowBook2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowBook2Row);
                return rowBook2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Book2Row FindByid(int id) {
                return ((Book2Row)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Book2DataTable cln = ((Book2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Book2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnAuthor = base.Columns["Author"];
                this.columnAuthorSign = base.Columns["AuthorSign"];
                this.columnMainTitle = base.Columns["MainTitle"];
                this.columnGeneralMaterialDesignation = base.Columns["GeneralMaterialDesignation"];
                this.columnParallelTitle = base.Columns["ParallelTitle"];
                this.columnInformationPertainingToTheTitle = base.Columns["InformationPertainingToTheTitle"];
                this.columnFirstInformationOnLiability = base.Columns["FirstInformationOnLiability"];
                this.columnFurtherInformationOnLiability = base.Columns["FurtherInformationOnLiability"];
                this.columnInformationOnThePublication = base.Columns["InformationOnThePublication"];
                this.columnParallelInformationAboutThePublication = base.Columns["ParallelInformationAboutThePublication"];
                this.columnFirstInformationOnLiabilityRelatingPublication = base.Columns["FirstInformationOnLiabilityRelatingPublication"];
                this.columnFurtherInformationOnLiabilityRelatingPublication = base.Columns["FurtherInformationOnLiabilityRelatingPublication"];
                this.columnAdditionalInformationAboutPublication = base.Columns["AdditionalInformationAboutPublication"];
                this.columnFirstInformationOnLiabilityRelatingToAdditionalInformationPublication = base.Columns["FirstInformationOnLiabilityRelatingToAdditionalInformationPublication"];
                this.columnFurtherInformationOnLiabilityRelatingToAdditionalInformationPublication = base.Columns["FurtherInformationOnLiabilityRelatingToAdditionalInformationPublication"];
                this.columnPlacePublication = base.Columns["PlacePublication"];
                this.columnFirstPlacePublication = base.Columns["FirstPlacePublication"];
                this.columnSubsequentPlacePublication = base.Columns["SubsequentPlacePublication"];
                this.columnNamePublisherDistributor = base.Columns["NamePublisherDistributor"];
                this.columnInformationAboutFunctionsPublisher = base.Columns["InformationAboutFunctionsPublisher"];
                this.columnDatePublication = base.Columns["DatePublication"];
                this.columnPlaceManufacture = base.Columns["PlaceManufacture"];
                this.columnManufacturerName = base.Columns["ManufacturerName"];
                this.columnDateManufacture = base.Columns["DateManufacture"];
                this.columnSpecificDesignationMaterialAndVolume = base.Columns["SpecificDesignationMaterialAndVolume"];
                this.columnOtherInformationAboutPhysicalCharacteristics = base.Columns["OtherInformationAboutPhysicalCharacteristics"];
                this.columnDimensions = base.Columns["Dimensions"];
                this.columnInformationAccompanyingMaterial = base.Columns["InformationAccompanyingMaterial"];
                this.columnTitleSeries = base.Columns["TitleSeries"];
                this.columnParallelTitleSeries = base.Columns["ParallelTitleSeries"];
                this.columnInformationPertainingTitleSeries = base.Columns["InformationPertainingTitleSeries"];
                this.columnFirstInformationAboutLiabilityRelatedSeries = base.Columns["FirstInformationAboutLiabilityRelatedSeries"];
                this.columnSubsequentLiabilityInformationRelatingSeries = base.Columns["SubsequentLiabilityInformationRelatingSeries"];
                this.columnISSN = base.Columns["ISSN"];
                this.columnIssueNumberSeries = base.Columns["IssueNumberSeries"];
                this.columnISBN = base.Columns["ISBN"];
                this.columnBBK = base.Columns["BBK"];
                this.columnPrice = base.Columns["Price"];
                this.columnAddData = base.Columns["AddData"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnAuthor = new global::System.Data.DataColumn("Author", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuthor);
                this.columnAuthorSign = new global::System.Data.DataColumn("AuthorSign", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuthorSign);
                this.columnMainTitle = new global::System.Data.DataColumn("MainTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMainTitle);
                this.columnGeneralMaterialDesignation = new global::System.Data.DataColumn("GeneralMaterialDesignation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeneralMaterialDesignation);
                this.columnParallelTitle = new global::System.Data.DataColumn("ParallelTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParallelTitle);
                this.columnInformationPertainingToTheTitle = new global::System.Data.DataColumn("InformationPertainingToTheTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInformationPertainingToTheTitle);
                this.columnFirstInformationOnLiability = new global::System.Data.DataColumn("FirstInformationOnLiability", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstInformationOnLiability);
                this.columnFurtherInformationOnLiability = new global::System.Data.DataColumn("FurtherInformationOnLiability", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFurtherInformationOnLiability);
                this.columnInformationOnThePublication = new global::System.Data.DataColumn("InformationOnThePublication", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInformationOnThePublication);
                this.columnParallelInformationAboutThePublication = new global::System.Data.DataColumn("ParallelInformationAboutThePublication", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParallelInformationAboutThePublication);
                this.columnFirstInformationOnLiabilityRelatingPublication = new global::System.Data.DataColumn("FirstInformationOnLiabilityRelatingPublication", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstInformationOnLiabilityRelatingPublication);
                this.columnFurtherInformationOnLiabilityRelatingPublication = new global::System.Data.DataColumn("FurtherInformationOnLiabilityRelatingPublication", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFurtherInformationOnLiabilityRelatingPublication);
                this.columnAdditionalInformationAboutPublication = new global::System.Data.DataColumn("AdditionalInformationAboutPublication", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdditionalInformationAboutPublication);
                this.columnFirstInformationOnLiabilityRelatingToAdditionalInformationPublication = new global::System.Data.DataColumn("FirstInformationOnLiabilityRelatingToAdditionalInformationPublication", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstInformationOnLiabilityRelatingToAdditionalInformationPublication);
                this.columnFurtherInformationOnLiabilityRelatingToAdditionalInformationPublication = new global::System.Data.DataColumn("FurtherInformationOnLiabilityRelatingToAdditionalInformationPublication", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFurtherInformationOnLiabilityRelatingToAdditionalInformationPublication);
                this.columnPlacePublication = new global::System.Data.DataColumn("PlacePublication", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlacePublication);
                this.columnFirstPlacePublication = new global::System.Data.DataColumn("FirstPlacePublication", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstPlacePublication);
                this.columnSubsequentPlacePublication = new global::System.Data.DataColumn("SubsequentPlacePublication", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubsequentPlacePublication);
                this.columnNamePublisherDistributor = new global::System.Data.DataColumn("NamePublisherDistributor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamePublisherDistributor);
                this.columnInformationAboutFunctionsPublisher = new global::System.Data.DataColumn("InformationAboutFunctionsPublisher", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInformationAboutFunctionsPublisher);
                this.columnDatePublication = new global::System.Data.DataColumn("DatePublication", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDatePublication);
                this.columnPlaceManufacture = new global::System.Data.DataColumn("PlaceManufacture", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlaceManufacture);
                this.columnManufacturerName = new global::System.Data.DataColumn("ManufacturerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManufacturerName);
                this.columnDateManufacture = new global::System.Data.DataColumn("DateManufacture", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateManufacture);
                this.columnSpecificDesignationMaterialAndVolume = new global::System.Data.DataColumn("SpecificDesignationMaterialAndVolume", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecificDesignationMaterialAndVolume);
                this.columnOtherInformationAboutPhysicalCharacteristics = new global::System.Data.DataColumn("OtherInformationAboutPhysicalCharacteristics", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherInformationAboutPhysicalCharacteristics);
                this.columnDimensions = new global::System.Data.DataColumn("Dimensions", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDimensions);
                this.columnInformationAccompanyingMaterial = new global::System.Data.DataColumn("InformationAccompanyingMaterial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInformationAccompanyingMaterial);
                this.columnTitleSeries = new global::System.Data.DataColumn("TitleSeries", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitleSeries);
                this.columnParallelTitleSeries = new global::System.Data.DataColumn("ParallelTitleSeries", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParallelTitleSeries);
                this.columnInformationPertainingTitleSeries = new global::System.Data.DataColumn("InformationPertainingTitleSeries", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInformationPertainingTitleSeries);
                this.columnFirstInformationAboutLiabilityRelatedSeries = new global::System.Data.DataColumn("FirstInformationAboutLiabilityRelatedSeries", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstInformationAboutLiabilityRelatedSeries);
                this.columnSubsequentLiabilityInformationRelatingSeries = new global::System.Data.DataColumn("SubsequentLiabilityInformationRelatingSeries", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubsequentLiabilityInformationRelatingSeries);
                this.columnISSN = new global::System.Data.DataColumn("ISSN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISSN);
                this.columnIssueNumberSeries = new global::System.Data.DataColumn("IssueNumberSeries", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueNumberSeries);
                this.columnISBN = new global::System.Data.DataColumn("ISBN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISBN);
                this.columnBBK = new global::System.Data.DataColumn("BBK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBBK);
                this.columnPrice = new global::System.Data.DataColumn("Price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice);
                this.columnAddData = new global::System.Data.DataColumn("AddData", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddData);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnAuthor.MaxLength = 2147483647;
                this.columnAuthorSign.MaxLength = 2147483647;
                this.columnMainTitle.MaxLength = 2147483647;
                this.columnGeneralMaterialDesignation.MaxLength = 2147483647;
                this.columnParallelTitle.MaxLength = 2147483647;
                this.columnInformationPertainingToTheTitle.MaxLength = 2147483647;
                this.columnFirstInformationOnLiability.MaxLength = 2147483647;
                this.columnFurtherInformationOnLiability.MaxLength = 2147483647;
                this.columnInformationOnThePublication.MaxLength = 2147483647;
                this.columnParallelInformationAboutThePublication.MaxLength = 2147483647;
                this.columnFirstInformationOnLiabilityRelatingPublication.MaxLength = 2147483647;
                this.columnFurtherInformationOnLiabilityRelatingPublication.MaxLength = 2147483647;
                this.columnAdditionalInformationAboutPublication.MaxLength = 2147483647;
                this.columnFirstInformationOnLiabilityRelatingToAdditionalInformationPublication.MaxLength = 2147483647;
                this.columnFurtherInformationOnLiabilityRelatingToAdditionalInformationPublication.MaxLength = 2147483647;
                this.columnPlacePublication.MaxLength = 2147483647;
                this.columnFirstPlacePublication.MaxLength = 2147483647;
                this.columnSubsequentPlacePublication.MaxLength = 2147483647;
                this.columnNamePublisherDistributor.MaxLength = 2147483647;
                this.columnInformationAboutFunctionsPublisher.MaxLength = 2147483647;
                this.columnDatePublication.MaxLength = 2147483647;
                this.columnPlaceManufacture.MaxLength = 2147483647;
                this.columnManufacturerName.MaxLength = 2147483647;
                this.columnDateManufacture.MaxLength = 2147483647;
                this.columnSpecificDesignationMaterialAndVolume.MaxLength = 2147483647;
                this.columnOtherInformationAboutPhysicalCharacteristics.MaxLength = 2147483647;
                this.columnDimensions.MaxLength = 2147483647;
                this.columnInformationAccompanyingMaterial.MaxLength = 2147483647;
                this.columnTitleSeries.MaxLength = 2147483647;
                this.columnParallelTitleSeries.MaxLength = 2147483647;
                this.columnInformationPertainingTitleSeries.MaxLength = 2147483647;
                this.columnFirstInformationAboutLiabilityRelatedSeries.MaxLength = 2147483647;
                this.columnSubsequentLiabilityInformationRelatingSeries.MaxLength = 2147483647;
                this.columnISSN.MaxLength = 2147483647;
                this.columnIssueNumberSeries.MaxLength = 2147483647;
                this.columnISBN.MaxLength = 2147483647;
                this.columnBBK.MaxLength = 2147483647;
                this.columnPrice.MaxLength = 2147483647;
                this.columnAddData.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Book2Row NewBook2Row() {
                return ((Book2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Book2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Book2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Book2RowChanged != null)) {
                    this.Book2RowChanged(this, new Book2RowChangeEvent(((Book2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Book2RowChanging != null)) {
                    this.Book2RowChanging(this, new Book2RowChangeEvent(((Book2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Book2RowDeleted != null)) {
                    this.Book2RowDeleted(this, new Book2RowChangeEvent(((Book2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Book2RowDeleting != null)) {
                    this.Book2RowDeleting(this, new Book2RowChangeEvent(((Book2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveBook2Row(Book2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BooksDataSet ds = new BooksDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Book2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Book2Row : global::System.Data.DataRow {
            
            private Book2DataTable tableBook2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal Book2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBook2 = ((Book2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tableBook2.idColumn]));
                }
                set {
                    this[this.tableBook2.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Author {
                get {
                    try {
                        return ((string)(this[this.tableBook2.AuthorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Author\' в таблице \'Book2\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableBook2.AuthorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AuthorSign {
                get {
                    try {
                        return ((string)(this[this.tableBook2.AuthorSignColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'AuthorSign\' в таблице \'Book2\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableBook2.AuthorSignColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string MainTitle {
                get {
                    try {
                        return ((string)(this[this.tableBook2.MainTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'MainTitle\' в таблице \'Book2\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableBook2.MainTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string GeneralMaterialDesignation {
                get {
                    try {
                        return ((string)(this[this.tableBook2.GeneralMaterialDesignationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'GeneralMaterialDesignation\' в таблице \'Book2\' равно DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableBook2.GeneralMaterialDesignationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ParallelTitle {
                get {
                    try {
                        return ((string)(this[this.tableBook2.ParallelTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ParallelTitle\' в таблице \'Book2\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableBook2.ParallelTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string InformationPertainingToTheTitle {
                get {
                    try {
                        return ((string)(this[this.tableBook2.InformationPertainingToTheTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'InformationPertainingToTheTitle\' в таблице \'Book2\' равно DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableBook2.InformationPertainingToTheTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FirstInformationOnLiability {
                get {
                    try {
                        return ((string)(this[this.tableBook2.FirstInformationOnLiabilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'FirstInformationOnLiability\' в таблице \'Book2\' равно DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableBook2.FirstInformationOnLiabilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FurtherInformationOnLiability {
                get {
                    try {
                        return ((string)(this[this.tableBook2.FurtherInformationOnLiabilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'FurtherInformationOnLiability\' в таблице \'Book2\' равно DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableBook2.FurtherInformationOnLiabilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string InformationOnThePublication {
                get {
                    try {
                        return ((string)(this[this.tableBook2.InformationOnThePublicationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'InformationOnThePublication\' в таблице \'Book2\' равно DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableBook2.InformationOnThePublicationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ParallelInformationAboutThePublication {
                get {
                    try {
                        return ((string)(this[this.tableBook2.ParallelInformationAboutThePublicationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ParallelInformationAboutThePublication\' в таблице \'Book2\' р" +
                                "авно DBNull.", e);
                    }
                }
                set {
                    this[this.tableBook2.ParallelInformationAboutThePublicationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FirstInformationOnLiabilityRelatingPublication {
                get {
                    try {
                        return ((string)(this[this.tableBook2.FirstInformationOnLiabilityRelatingPublicationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'FirstInformationOnLiabilityRelatingPublication\' в таблице \'" +
                                "Book2\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableBook2.FirstInformationOnLiabilityRelatingPublicationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FurtherInformationOnLiabilityRelatingPublication {
                get {
                    try {
                        return ((string)(this[this.tableBook2.FurtherInformationOnLiabilityRelatingPublicationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'FurtherInformationOnLiabilityRelatingPublication\' в таблице" +
                                " \'Book2\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableBook2.FurtherInformationOnLiabilityRelatingPublicationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AdditionalInformationAboutPublication {
                get {
                    try {
                        return ((string)(this[this.tableBook2.AdditionalInformationAboutPublicationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'AdditionalInformationAboutPublication\' в таблице \'Book2\' ра" +
                                "вно DBNull.", e);
                    }
                }
                set {
                    this[this.tableBook2.AdditionalInformationAboutPublicationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FirstInformationOnLiabilityRelatingToAdditionalInformationPublication {
                get {
                    try {
                        return ((string)(this[this.tableBook2.FirstInformationOnLiabilityRelatingToAdditionalInformationPublicationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'FirstInformationOnLiabilityRelatingToAdditionalInformationP" +
                                "ublication\' в таблице \'Book2\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableBook2.FirstInformationOnLiabilityRelatingToAdditionalInformationPublicationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FurtherInformationOnLiabilityRelatingToAdditionalInformationPublication {
                get {
                    try {
                        return ((string)(this[this.tableBook2.FurtherInformationOnLiabilityRelatingToAdditionalInformationPublicationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'FurtherInformationOnLiabilityRelatingToAdditionalInformatio" +
                                "nPublication\' в таблице \'Book2\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableBook2.FurtherInformationOnLiabilityRelatingToAdditionalInformationPublicationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PlacePublication {
                get {
                    try {
                        return ((string)(this[this.tableBook2.PlacePublicationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'PlacePublication\' в таблице \'Book2\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableBook2.PlacePublicationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FirstPlacePublication {
                get {
                    try {
                        return ((string)(this[this.tableBook2.FirstPlacePublicationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'FirstPlacePublication\' в таблице \'Book2\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableBook2.FirstPlacePublicationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SubsequentPlacePublication {
                get {
                    try {
                        return ((string)(this[this.tableBook2.SubsequentPlacePublicationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'SubsequentPlacePublication\' в таблице \'Book2\' равно DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableBook2.SubsequentPlacePublicationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string NamePublisherDistributor {
                get {
                    try {
                        return ((string)(this[this.tableBook2.NamePublisherDistributorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'NamePublisherDistributor\' в таблице \'Book2\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableBook2.NamePublisherDistributorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string InformationAboutFunctionsPublisher {
                get {
                    try {
                        return ((string)(this[this.tableBook2.InformationAboutFunctionsPublisherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'InformationAboutFunctionsPublisher\' в таблице \'Book2\' равно" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableBook2.InformationAboutFunctionsPublisherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DatePublication {
                get {
                    try {
                        return ((string)(this[this.tableBook2.DatePublicationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DatePublication\' в таблице \'Book2\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableBook2.DatePublicationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PlaceManufacture {
                get {
                    try {
                        return ((string)(this[this.tableBook2.PlaceManufactureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'PlaceManufacture\' в таблице \'Book2\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableBook2.PlaceManufactureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ManufacturerName {
                get {
                    try {
                        return ((string)(this[this.tableBook2.ManufacturerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ManufacturerName\' в таблице \'Book2\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableBook2.ManufacturerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DateManufacture {
                get {
                    try {
                        return ((string)(this[this.tableBook2.DateManufactureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DateManufacture\' в таблице \'Book2\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableBook2.DateManufactureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SpecificDesignationMaterialAndVolume {
                get {
                    try {
                        return ((string)(this[this.tableBook2.SpecificDesignationMaterialAndVolumeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'SpecificDesignationMaterialAndVolume\' в таблице \'Book2\' рав" +
                                "но DBNull.", e);
                    }
                }
                set {
                    this[this.tableBook2.SpecificDesignationMaterialAndVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string OtherInformationAboutPhysicalCharacteristics {
                get {
                    try {
                        return ((string)(this[this.tableBook2.OtherInformationAboutPhysicalCharacteristicsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'OtherInformationAboutPhysicalCharacteristics\' в таблице \'Bo" +
                                "ok2\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableBook2.OtherInformationAboutPhysicalCharacteristicsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Dimensions {
                get {
                    try {
                        return ((string)(this[this.tableBook2.DimensionsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Dimensions\' в таблице \'Book2\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableBook2.DimensionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string InformationAccompanyingMaterial {
                get {
                    try {
                        return ((string)(this[this.tableBook2.InformationAccompanyingMaterialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'InformationAccompanyingMaterial\' в таблице \'Book2\' равно DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableBook2.InformationAccompanyingMaterialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string TitleSeries {
                get {
                    try {
                        return ((string)(this[this.tableBook2.TitleSeriesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'TitleSeries\' в таблице \'Book2\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableBook2.TitleSeriesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ParallelTitleSeries {
                get {
                    try {
                        return ((string)(this[this.tableBook2.ParallelTitleSeriesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ParallelTitleSeries\' в таблице \'Book2\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableBook2.ParallelTitleSeriesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string InformationPertainingTitleSeries {
                get {
                    try {
                        return ((string)(this[this.tableBook2.InformationPertainingTitleSeriesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'InformationPertainingTitleSeries\' в таблице \'Book2\' равно D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableBook2.InformationPertainingTitleSeriesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FirstInformationAboutLiabilityRelatedSeries {
                get {
                    try {
                        return ((string)(this[this.tableBook2.FirstInformationAboutLiabilityRelatedSeriesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'FirstInformationAboutLiabilityRelatedSeries\' в таблице \'Boo" +
                                "k2\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableBook2.FirstInformationAboutLiabilityRelatedSeriesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SubsequentLiabilityInformationRelatingSeries {
                get {
                    try {
                        return ((string)(this[this.tableBook2.SubsequentLiabilityInformationRelatingSeriesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'SubsequentLiabilityInformationRelatingSeries\' в таблице \'Bo" +
                                "ok2\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableBook2.SubsequentLiabilityInformationRelatingSeriesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ISSN {
                get {
                    try {
                        return ((string)(this[this.tableBook2.ISSNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ISSN\' в таблице \'Book2\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableBook2.ISSNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string IssueNumberSeries {
                get {
                    try {
                        return ((string)(this[this.tableBook2.IssueNumberSeriesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'IssueNumberSeries\' в таблице \'Book2\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableBook2.IssueNumberSeriesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ISBN {
                get {
                    try {
                        return ((string)(this[this.tableBook2.ISBNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ISBN\' в таблице \'Book2\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableBook2.ISBNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BBK {
                get {
                    try {
                        return ((string)(this[this.tableBook2.BBKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'BBK\' в таблице \'Book2\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableBook2.BBKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Price {
                get {
                    try {
                        return ((string)(this[this.tableBook2.PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Price\' в таблице \'Book2\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableBook2.PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AddData {
                get {
                    try {
                        return ((string)(this[this.tableBook2.AddDataColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'AddData\' в таблице \'Book2\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableBook2.AddDataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAuthorNull() {
                return this.IsNull(this.tableBook2.AuthorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAuthorNull() {
                this[this.tableBook2.AuthorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAuthorSignNull() {
                return this.IsNull(this.tableBook2.AuthorSignColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAuthorSignNull() {
                this[this.tableBook2.AuthorSignColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMainTitleNull() {
                return this.IsNull(this.tableBook2.MainTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMainTitleNull() {
                this[this.tableBook2.MainTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGeneralMaterialDesignationNull() {
                return this.IsNull(this.tableBook2.GeneralMaterialDesignationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGeneralMaterialDesignationNull() {
                this[this.tableBook2.GeneralMaterialDesignationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsParallelTitleNull() {
                return this.IsNull(this.tableBook2.ParallelTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetParallelTitleNull() {
                this[this.tableBook2.ParallelTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsInformationPertainingToTheTitleNull() {
                return this.IsNull(this.tableBook2.InformationPertainingToTheTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetInformationPertainingToTheTitleNull() {
                this[this.tableBook2.InformationPertainingToTheTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFirstInformationOnLiabilityNull() {
                return this.IsNull(this.tableBook2.FirstInformationOnLiabilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFirstInformationOnLiabilityNull() {
                this[this.tableBook2.FirstInformationOnLiabilityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFurtherInformationOnLiabilityNull() {
                return this.IsNull(this.tableBook2.FurtherInformationOnLiabilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFurtherInformationOnLiabilityNull() {
                this[this.tableBook2.FurtherInformationOnLiabilityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsInformationOnThePublicationNull() {
                return this.IsNull(this.tableBook2.InformationOnThePublicationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetInformationOnThePublicationNull() {
                this[this.tableBook2.InformationOnThePublicationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsParallelInformationAboutThePublicationNull() {
                return this.IsNull(this.tableBook2.ParallelInformationAboutThePublicationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetParallelInformationAboutThePublicationNull() {
                this[this.tableBook2.ParallelInformationAboutThePublicationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFirstInformationOnLiabilityRelatingPublicationNull() {
                return this.IsNull(this.tableBook2.FirstInformationOnLiabilityRelatingPublicationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFirstInformationOnLiabilityRelatingPublicationNull() {
                this[this.tableBook2.FirstInformationOnLiabilityRelatingPublicationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFurtherInformationOnLiabilityRelatingPublicationNull() {
                return this.IsNull(this.tableBook2.FurtherInformationOnLiabilityRelatingPublicationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFurtherInformationOnLiabilityRelatingPublicationNull() {
                this[this.tableBook2.FurtherInformationOnLiabilityRelatingPublicationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAdditionalInformationAboutPublicationNull() {
                return this.IsNull(this.tableBook2.AdditionalInformationAboutPublicationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAdditionalInformationAboutPublicationNull() {
                this[this.tableBook2.AdditionalInformationAboutPublicationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFirstInformationOnLiabilityRelatingToAdditionalInformationPublicationNull() {
                return this.IsNull(this.tableBook2.FirstInformationOnLiabilityRelatingToAdditionalInformationPublicationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFirstInformationOnLiabilityRelatingToAdditionalInformationPublicationNull() {
                this[this.tableBook2.FirstInformationOnLiabilityRelatingToAdditionalInformationPublicationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFurtherInformationOnLiabilityRelatingToAdditionalInformationPublicationNull() {
                return this.IsNull(this.tableBook2.FurtherInformationOnLiabilityRelatingToAdditionalInformationPublicationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFurtherInformationOnLiabilityRelatingToAdditionalInformationPublicationNull() {
                this[this.tableBook2.FurtherInformationOnLiabilityRelatingToAdditionalInformationPublicationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPlacePublicationNull() {
                return this.IsNull(this.tableBook2.PlacePublicationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPlacePublicationNull() {
                this[this.tableBook2.PlacePublicationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFirstPlacePublicationNull() {
                return this.IsNull(this.tableBook2.FirstPlacePublicationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFirstPlacePublicationNull() {
                this[this.tableBook2.FirstPlacePublicationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSubsequentPlacePublicationNull() {
                return this.IsNull(this.tableBook2.SubsequentPlacePublicationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSubsequentPlacePublicationNull() {
                this[this.tableBook2.SubsequentPlacePublicationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNamePublisherDistributorNull() {
                return this.IsNull(this.tableBook2.NamePublisherDistributorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNamePublisherDistributorNull() {
                this[this.tableBook2.NamePublisherDistributorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsInformationAboutFunctionsPublisherNull() {
                return this.IsNull(this.tableBook2.InformationAboutFunctionsPublisherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetInformationAboutFunctionsPublisherNull() {
                this[this.tableBook2.InformationAboutFunctionsPublisherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDatePublicationNull() {
                return this.IsNull(this.tableBook2.DatePublicationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDatePublicationNull() {
                this[this.tableBook2.DatePublicationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPlaceManufactureNull() {
                return this.IsNull(this.tableBook2.PlaceManufactureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPlaceManufactureNull() {
                this[this.tableBook2.PlaceManufactureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsManufacturerNameNull() {
                return this.IsNull(this.tableBook2.ManufacturerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetManufacturerNameNull() {
                this[this.tableBook2.ManufacturerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDateManufactureNull() {
                return this.IsNull(this.tableBook2.DateManufactureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDateManufactureNull() {
                this[this.tableBook2.DateManufactureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSpecificDesignationMaterialAndVolumeNull() {
                return this.IsNull(this.tableBook2.SpecificDesignationMaterialAndVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSpecificDesignationMaterialAndVolumeNull() {
                this[this.tableBook2.SpecificDesignationMaterialAndVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOtherInformationAboutPhysicalCharacteristicsNull() {
                return this.IsNull(this.tableBook2.OtherInformationAboutPhysicalCharacteristicsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOtherInformationAboutPhysicalCharacteristicsNull() {
                this[this.tableBook2.OtherInformationAboutPhysicalCharacteristicsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDimensionsNull() {
                return this.IsNull(this.tableBook2.DimensionsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDimensionsNull() {
                this[this.tableBook2.DimensionsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsInformationAccompanyingMaterialNull() {
                return this.IsNull(this.tableBook2.InformationAccompanyingMaterialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetInformationAccompanyingMaterialNull() {
                this[this.tableBook2.InformationAccompanyingMaterialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTitleSeriesNull() {
                return this.IsNull(this.tableBook2.TitleSeriesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTitleSeriesNull() {
                this[this.tableBook2.TitleSeriesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsParallelTitleSeriesNull() {
                return this.IsNull(this.tableBook2.ParallelTitleSeriesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetParallelTitleSeriesNull() {
                this[this.tableBook2.ParallelTitleSeriesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsInformationPertainingTitleSeriesNull() {
                return this.IsNull(this.tableBook2.InformationPertainingTitleSeriesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetInformationPertainingTitleSeriesNull() {
                this[this.tableBook2.InformationPertainingTitleSeriesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFirstInformationAboutLiabilityRelatedSeriesNull() {
                return this.IsNull(this.tableBook2.FirstInformationAboutLiabilityRelatedSeriesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFirstInformationAboutLiabilityRelatedSeriesNull() {
                this[this.tableBook2.FirstInformationAboutLiabilityRelatedSeriesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSubsequentLiabilityInformationRelatingSeriesNull() {
                return this.IsNull(this.tableBook2.SubsequentLiabilityInformationRelatingSeriesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSubsequentLiabilityInformationRelatingSeriesNull() {
                this[this.tableBook2.SubsequentLiabilityInformationRelatingSeriesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsISSNNull() {
                return this.IsNull(this.tableBook2.ISSNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetISSNNull() {
                this[this.tableBook2.ISSNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIssueNumberSeriesNull() {
                return this.IsNull(this.tableBook2.IssueNumberSeriesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIssueNumberSeriesNull() {
                this[this.tableBook2.IssueNumberSeriesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsISBNNull() {
                return this.IsNull(this.tableBook2.ISBNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetISBNNull() {
                this[this.tableBook2.ISBNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBBKNull() {
                return this.IsNull(this.tableBook2.BBKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBBKNull() {
                this[this.tableBook2.BBKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPriceNull() {
                return this.IsNull(this.tableBook2.PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPriceNull() {
                this[this.tableBook2.PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAddDataNull() {
                return this.IsNull(this.tableBook2.AddDataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAddDataNull() {
                this[this.tableBook2.AddDataColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class Book2RowChangeEvent : global::System.EventArgs {
            
            private Book2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Book2RowChangeEvent(Book2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Book2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Library.BooksDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Book2TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public Book2TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Book2";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("Author", "Author");
            tableMapping.ColumnMappings.Add("AuthorSign", "AuthorSign");
            tableMapping.ColumnMappings.Add("MainTitle", "MainTitle");
            tableMapping.ColumnMappings.Add("GeneralMaterialDesignation", "GeneralMaterialDesignation");
            tableMapping.ColumnMappings.Add("ParallelTitle", "ParallelTitle");
            tableMapping.ColumnMappings.Add("InformationPertainingToTheTitle", "InformationPertainingToTheTitle");
            tableMapping.ColumnMappings.Add("FirstInformationOnLiability", "FirstInformationOnLiability");
            tableMapping.ColumnMappings.Add("FurtherInformationOnLiability", "FurtherInformationOnLiability");
            tableMapping.ColumnMappings.Add("InformationOnThePublication", "InformationOnThePublication");
            tableMapping.ColumnMappings.Add("ParallelInformationAboutThePublication", "ParallelInformationAboutThePublication");
            tableMapping.ColumnMappings.Add("FirstInformationOnLiabilityRelatingPublication", "FirstInformationOnLiabilityRelatingPublication");
            tableMapping.ColumnMappings.Add("FurtherInformationOnLiabilityRelatingPublication", "FurtherInformationOnLiabilityRelatingPublication");
            tableMapping.ColumnMappings.Add("AdditionalInformationAboutPublication", "AdditionalInformationAboutPublication");
            tableMapping.ColumnMappings.Add("FirstInformationOnLiabilityRelatingToAdditionalInformationPublication", "FirstInformationOnLiabilityRelatingToAdditionalInformationPublication");
            tableMapping.ColumnMappings.Add("FurtherInformationOnLiabilityRelatingToAdditionalInformationPublication", "FurtherInformationOnLiabilityRelatingToAdditionalInformationPublication");
            tableMapping.ColumnMappings.Add("PlacePublication", "PlacePublication");
            tableMapping.ColumnMappings.Add("FirstPlacePublication", "FirstPlacePublication");
            tableMapping.ColumnMappings.Add("SubsequentPlacePublication", "SubsequentPlacePublication");
            tableMapping.ColumnMappings.Add("NamePublisherDistributor", "NamePublisherDistributor");
            tableMapping.ColumnMappings.Add("InformationAboutFunctionsPublisher", "InformationAboutFunctionsPublisher");
            tableMapping.ColumnMappings.Add("DatePublication", "DatePublication");
            tableMapping.ColumnMappings.Add("PlaceManufacture", "PlaceManufacture");
            tableMapping.ColumnMappings.Add("ManufacturerName", "ManufacturerName");
            tableMapping.ColumnMappings.Add("DateManufacture", "DateManufacture");
            tableMapping.ColumnMappings.Add("SpecificDesignationMaterialAndVolume", "SpecificDesignationMaterialAndVolume");
            tableMapping.ColumnMappings.Add("OtherInformationAboutPhysicalCharacteristics", "OtherInformationAboutPhysicalCharacteristics");
            tableMapping.ColumnMappings.Add("Dimensions", "Dimensions");
            tableMapping.ColumnMappings.Add("InformationAccompanyingMaterial", "InformationAccompanyingMaterial");
            tableMapping.ColumnMappings.Add("TitleSeries", "TitleSeries");
            tableMapping.ColumnMappings.Add("ParallelTitleSeries", "ParallelTitleSeries");
            tableMapping.ColumnMappings.Add("InformationPertainingTitleSeries", "InformationPertainingTitleSeries");
            tableMapping.ColumnMappings.Add("FirstInformationAboutLiabilityRelatedSeries", "FirstInformationAboutLiabilityRelatedSeries");
            tableMapping.ColumnMappings.Add("SubsequentLiabilityInformationRelatingSeries", "SubsequentLiabilityInformationRelatingSeries");
            tableMapping.ColumnMappings.Add("ISSN", "ISSN");
            tableMapping.ColumnMappings.Add("IssueNumberSeries", "IssueNumberSeries");
            tableMapping.ColumnMappings.Add("ISBN", "ISBN");
            tableMapping.ColumnMappings.Add("BBK", "BBK");
            tableMapping.ColumnMappings.Add("Price", "Price");
            tableMapping.ColumnMappings.Add("AddData", "AddData");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Book2] WHERE (([id] = @Original_id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Book2] ([Author], [AuthorSign], [MainTitle], [GeneralMaterialD" +
                "esignation], [ParallelTitle], [InformationPertainingToTheTitle], [FirstInformati" +
                "onOnLiability], [FurtherInformationOnLiability], [InformationOnThePublication], " +
                "[ParallelInformationAboutThePublication], [FirstInformationOnLiabilityRelatingPu" +
                "blication], [FurtherInformationOnLiabilityRelatingPublication], [AdditionalInfor" +
                "mationAboutPublication], [FirstInformationOnLiabilityRelatingToAdditionalInforma" +
                "tionPublication], [FurtherInformationOnLiabilityRelatingToAdditionalInformationP" +
                "ublication], [PlacePublication], [FirstPlacePublication], [SubsequentPlacePublic" +
                "ation], [NamePublisherDistributor], [InformationAboutFunctionsPublisher], [DateP" +
                "ublication], [PlaceManufacture], [ManufacturerName], [DateManufacture], [Specifi" +
                "cDesignationMaterialAndVolume], [OtherInformationAboutPhysicalCharacteristics], " +
                "[Dimensions], [InformationAccompanyingMaterial], [TitleSeries], [ParallelTitleSe" +
                "ries], [InformationPertainingTitleSeries], [FirstInformationAboutLiabilityRelate" +
                "dSeries], [SubsequentLiabilityInformationRelatingSeries], [ISSN], [IssueNumberSe" +
                "ries], [ISBN], [BBK], [Price], [AddData]) VALUES (@Author, @AuthorSign, @MainTit" +
                "le, @GeneralMaterialDesignation, @ParallelTitle, @InformationPertainingToTheTitl" +
                "e, @FirstInformationOnLiability, @FurtherInformationOnLiability, @InformationOnT" +
                "hePublication, @ParallelInformationAboutThePublication, @FirstInformationOnLiabi" +
                "lityRelatingPublication, @FurtherInformationOnLiabilityRelatingPublication, @Add" +
                "itionalInformationAboutPublication, @FirstInformationOnLiabilityRelatingToAdditi" +
                "onalInformationPublication, @FurtherInformationOnLiabilityRelatingToAdditionalIn" +
                "formationPublication, @PlacePublication, @FirstPlacePublication, @SubsequentPlac" +
                "ePublication, @NamePublisherDistributor, @InformationAboutFunctionsPublisher, @D" +
                "atePublication, @PlaceManufacture, @ManufacturerName, @DateManufacture, @Specifi" +
                "cDesignationMaterialAndVolume, @OtherInformationAboutPhysicalCharacteristics, @D" +
                "imensions, @InformationAccompanyingMaterial, @TitleSeries, @ParallelTitleSeries," +
                " @InformationPertainingTitleSeries, @FirstInformationAboutLiabilityRelatedSeries" +
                ", @SubsequentLiabilityInformationRelatingSeries, @ISSN, @IssueNumberSeries, @ISB" +
                "N, @BBK, @Price, @AddData);\r\nSELECT id, Author, AuthorSign, MainTitle, GeneralMa" +
                "terialDesignation, ParallelTitle, InformationPertainingToTheTitle, FirstInformat" +
                "ionOnLiability, FurtherInformationOnLiability, InformationOnThePublication, Para" +
                "llelInformationAboutThePublication, FirstInformationOnLiabilityRelatingPublicati" +
                "on, FurtherInformationOnLiabilityRelatingPublication, AdditionalInformationAbout" +
                "Publication, FirstInformationOnLiabilityRelatingToAdditionalInformationPublicati" +
                "on, FurtherInformationOnLiabilityRelatingToAdditionalInformationPublication, Pla" +
                "cePublication, FirstPlacePublication, SubsequentPlacePublication, NamePublisherD" +
                "istributor, InformationAboutFunctionsPublisher, DatePublication, PlaceManufactur" +
                "e, ManufacturerName, DateManufacture, SpecificDesignationMaterialAndVolume, Othe" +
                "rInformationAboutPhysicalCharacteristics, Dimensions, InformationAccompanyingMat" +
                "erial, TitleSeries, ParallelTitleSeries, InformationPertainingTitleSeries, First" +
                "InformationAboutLiabilityRelatedSeries, SubsequentLiabilityInformationRelatingSe" +
                "ries, ISSN, IssueNumberSeries, ISBN, BBK, Price, AddData FROM Book2 WHERE (id = " +
                "SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Author", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Author", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AuthorSign", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AuthorSign", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MainTitle", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MainTitle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GeneralMaterialDesignation", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeneralMaterialDesignation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParallelTitle", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParallelTitle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InformationPertainingToTheTitle", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InformationPertainingToTheTitle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FirstInformationOnLiability", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstInformationOnLiability", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FurtherInformationOnLiability", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FurtherInformationOnLiability", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InformationOnThePublication", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InformationOnThePublication", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParallelInformationAboutThePublication", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParallelInformationAboutThePublication", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FirstInformationOnLiabilityRelatingPublication", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstInformationOnLiabilityRelatingPublication", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FurtherInformationOnLiabilityRelatingPublication", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FurtherInformationOnLiabilityRelatingPublication", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AdditionalInformationAboutPublication", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AdditionalInformationAboutPublication", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FirstInformationOnLiabilityRelatingToAdditionalInformationPublication", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstInformationOnLiabilityRelatingToAdditionalInformationPublication", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FurtherInformationOnLiabilityRelatingToAdditionalInformationPublication", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FurtherInformationOnLiabilityRelatingToAdditionalInformationPublication", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlacePublication", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlacePublication", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FirstPlacePublication", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstPlacePublication", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubsequentPlacePublication", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubsequentPlacePublication", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NamePublisherDistributor", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NamePublisherDistributor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InformationAboutFunctionsPublisher", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InformationAboutFunctionsPublisher", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DatePublication", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DatePublication", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlaceManufacture", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlaceManufacture", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ManufacturerName", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ManufacturerName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateManufacture", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateManufacture", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SpecificDesignationMaterialAndVolume", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecificDesignationMaterialAndVolume", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherInformationAboutPhysicalCharacteristics", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherInformationAboutPhysicalCharacteristics", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dimensions", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dimensions", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InformationAccompanyingMaterial", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InformationAccompanyingMaterial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TitleSeries", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TitleSeries", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParallelTitleSeries", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParallelTitleSeries", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InformationPertainingTitleSeries", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InformationPertainingTitleSeries", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FirstInformationAboutLiabilityRelatedSeries", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstInformationAboutLiabilityRelatedSeries", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubsequentLiabilityInformationRelatingSeries", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubsequentLiabilityInformationRelatingSeries", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ISSN", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ISSN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IssueNumberSeries", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IssueNumberSeries", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ISBN", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ISBN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BBK", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BBK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Price", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AddData", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AddData", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Book2] SET [Author] = @Author, [AuthorSign] = @AuthorSign, [MainTit" +
                "le] = @MainTitle, [GeneralMaterialDesignation] = @GeneralMaterialDesignation, [P" +
                "arallelTitle] = @ParallelTitle, [InformationPertainingToTheTitle] = @Information" +
                "PertainingToTheTitle, [FirstInformationOnLiability] = @FirstInformationOnLiabili" +
                "ty, [FurtherInformationOnLiability] = @FurtherInformationOnLiability, [Informati" +
                "onOnThePublication] = @InformationOnThePublication, [ParallelInformationAboutThe" +
                "Publication] = @ParallelInformationAboutThePublication, [FirstInformationOnLiabi" +
                "lityRelatingPublication] = @FirstInformationOnLiabilityRelatingPublication, [Fur" +
                "therInformationOnLiabilityRelatingPublication] = @FurtherInformationOnLiabilityR" +
                "elatingPublication, [AdditionalInformationAboutPublication] = @AdditionalInforma" +
                "tionAboutPublication, [FirstInformationOnLiabilityRelatingToAdditionalInformatio" +
                "nPublication] = @FirstInformationOnLiabilityRelatingToAdditionalInformationPubli" +
                "cation, [FurtherInformationOnLiabilityRelatingToAdditionalInformationPublication" +
                "] = @FurtherInformationOnLiabilityRelatingToAdditionalInformationPublication, [P" +
                "lacePublication] = @PlacePublication, [FirstPlacePublication] = @FirstPlacePubli" +
                "cation, [SubsequentPlacePublication] = @SubsequentPlacePublication, [NamePublish" +
                "erDistributor] = @NamePublisherDistributor, [InformationAboutFunctionsPublisher]" +
                " = @InformationAboutFunctionsPublisher, [DatePublication] = @DatePublication, [P" +
                "laceManufacture] = @PlaceManufacture, [ManufacturerName] = @ManufacturerName, [D" +
                "ateManufacture] = @DateManufacture, [SpecificDesignationMaterialAndVolume] = @Sp" +
                "ecificDesignationMaterialAndVolume, [OtherInformationAboutPhysicalCharacteristic" +
                "s] = @OtherInformationAboutPhysicalCharacteristics, [Dimensions] = @Dimensions, " +
                "[InformationAccompanyingMaterial] = @InformationAccompanyingMaterial, [TitleSeri" +
                "es] = @TitleSeries, [ParallelTitleSeries] = @ParallelTitleSeries, [InformationPe" +
                "rtainingTitleSeries] = @InformationPertainingTitleSeries, [FirstInformationAbout" +
                "LiabilityRelatedSeries] = @FirstInformationAboutLiabilityRelatedSeries, [Subsequ" +
                "entLiabilityInformationRelatingSeries] = @SubsequentLiabilityInformationRelating" +
                "Series, [ISSN] = @ISSN, [IssueNumberSeries] = @IssueNumberSeries, [ISBN] = @ISBN" +
                ", [BBK] = @BBK, [Price] = @Price, [AddData] = @AddData WHERE (([id] = @Original_" +
                "id));\r\nSELECT id, Author, AuthorSign, MainTitle, GeneralMaterialDesignation, Par" +
                "allelTitle, InformationPertainingToTheTitle, FirstInformationOnLiability, Furthe" +
                "rInformationOnLiability, InformationOnThePublication, ParallelInformationAboutTh" +
                "ePublication, FirstInformationOnLiabilityRelatingPublication, FurtherInformation" +
                "OnLiabilityRelatingPublication, AdditionalInformationAboutPublication, FirstInfo" +
                "rmationOnLiabilityRelatingToAdditionalInformationPublication, FurtherInformation" +
                "OnLiabilityRelatingToAdditionalInformationPublication, PlacePublication, FirstPl" +
                "acePublication, SubsequentPlacePublication, NamePublisherDistributor, Informatio" +
                "nAboutFunctionsPublisher, DatePublication, PlaceManufacture, ManufacturerName, D" +
                "ateManufacture, SpecificDesignationMaterialAndVolume, OtherInformationAboutPhysi" +
                "calCharacteristics, Dimensions, InformationAccompanyingMaterial, TitleSeries, Pa" +
                "rallelTitleSeries, InformationPertainingTitleSeries, FirstInformationAboutLiabil" +
                "ityRelatedSeries, SubsequentLiabilityInformationRelatingSeries, ISSN, IssueNumbe" +
                "rSeries, ISBN, BBK, Price, AddData FROM Book2 WHERE (id = @id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Author", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Author", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AuthorSign", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AuthorSign", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MainTitle", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MainTitle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GeneralMaterialDesignation", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeneralMaterialDesignation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParallelTitle", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParallelTitle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InformationPertainingToTheTitle", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InformationPertainingToTheTitle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FirstInformationOnLiability", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstInformationOnLiability", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FurtherInformationOnLiability", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FurtherInformationOnLiability", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InformationOnThePublication", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InformationOnThePublication", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParallelInformationAboutThePublication", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParallelInformationAboutThePublication", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FirstInformationOnLiabilityRelatingPublication", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstInformationOnLiabilityRelatingPublication", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FurtherInformationOnLiabilityRelatingPublication", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FurtherInformationOnLiabilityRelatingPublication", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AdditionalInformationAboutPublication", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AdditionalInformationAboutPublication", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FirstInformationOnLiabilityRelatingToAdditionalInformationPublication", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstInformationOnLiabilityRelatingToAdditionalInformationPublication", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FurtherInformationOnLiabilityRelatingToAdditionalInformationPublication", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FurtherInformationOnLiabilityRelatingToAdditionalInformationPublication", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlacePublication", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlacePublication", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FirstPlacePublication", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstPlacePublication", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubsequentPlacePublication", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubsequentPlacePublication", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NamePublisherDistributor", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NamePublisherDistributor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InformationAboutFunctionsPublisher", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InformationAboutFunctionsPublisher", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DatePublication", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DatePublication", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlaceManufacture", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlaceManufacture", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ManufacturerName", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ManufacturerName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateManufacture", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateManufacture", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SpecificDesignationMaterialAndVolume", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecificDesignationMaterialAndVolume", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherInformationAboutPhysicalCharacteristics", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherInformationAboutPhysicalCharacteristics", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dimensions", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dimensions", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InformationAccompanyingMaterial", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InformationAccompanyingMaterial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TitleSeries", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TitleSeries", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParallelTitleSeries", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParallelTitleSeries", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InformationPertainingTitleSeries", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InformationPertainingTitleSeries", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FirstInformationAboutLiabilityRelatedSeries", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstInformationAboutLiabilityRelatedSeries", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubsequentLiabilityInformationRelatingSeries", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubsequentLiabilityInformationRelatingSeries", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ISSN", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ISSN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IssueNumberSeries", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IssueNumberSeries", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ISBN", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ISBN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BBK", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BBK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Price", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AddData", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AddData", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Library.Properties.Settings.Default.BooksConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT id, Author, AuthorSign, MainTitle, GeneralMaterialDesignation, ParallelTitle, InformationPertainingToTheTitle, FirstInformationOnLiability, FurtherInformationOnLiability, InformationOnThePublication, ParallelInformationAboutThePublication, FirstInformationOnLiabilityRelatingPublication, FurtherInformationOnLiabilityRelatingPublication, AdditionalInformationAboutPublication, FirstInformationOnLiabilityRelatingToAdditionalInformationPublication, FurtherInformationOnLiabilityRelatingToAdditionalInformationPublication, PlacePublication, FirstPlacePublication, SubsequentPlacePublication, NamePublisherDistributor, InformationAboutFunctionsPublisher, DatePublication, PlaceManufacture, ManufacturerName, DateManufacture, SpecificDesignationMaterialAndVolume, OtherInformationAboutPhysicalCharacteristics, Dimensions, InformationAccompanyingMaterial, TitleSeries, ParallelTitleSeries, InformationPertainingTitleSeries, FirstInformationAboutLiabilityRelatedSeries, SubsequentLiabilityInformationRelatingSeries, ISSN, IssueNumberSeries, ISBN, BBK, Price, AddData FROM dbo.Book2";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(BooksDataSet.Book2DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BooksDataSet.Book2DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            BooksDataSet.Book2DataTable dataTable = new BooksDataSet.Book2DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BooksDataSet.Book2DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BooksDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Book2");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string Author, 
                    string AuthorSign, 
                    string MainTitle, 
                    string GeneralMaterialDesignation, 
                    string ParallelTitle, 
                    string InformationPertainingToTheTitle, 
                    string FirstInformationOnLiability, 
                    string FurtherInformationOnLiability, 
                    string InformationOnThePublication, 
                    string ParallelInformationAboutThePublication, 
                    string FirstInformationOnLiabilityRelatingPublication, 
                    string FurtherInformationOnLiabilityRelatingPublication, 
                    string AdditionalInformationAboutPublication, 
                    string FirstInformationOnLiabilityRelatingToAdditionalInformationPublication, 
                    string FurtherInformationOnLiabilityRelatingToAdditionalInformationPublication, 
                    string PlacePublication, 
                    string FirstPlacePublication, 
                    string SubsequentPlacePublication, 
                    string NamePublisherDistributor, 
                    string InformationAboutFunctionsPublisher, 
                    string DatePublication, 
                    string PlaceManufacture, 
                    string ManufacturerName, 
                    string DateManufacture, 
                    string SpecificDesignationMaterialAndVolume, 
                    string OtherInformationAboutPhysicalCharacteristics, 
                    string Dimensions, 
                    string InformationAccompanyingMaterial, 
                    string TitleSeries, 
                    string ParallelTitleSeries, 
                    string InformationPertainingTitleSeries, 
                    string FirstInformationAboutLiabilityRelatedSeries, 
                    string SubsequentLiabilityInformationRelatingSeries, 
                    string ISSN, 
                    string IssueNumberSeries, 
                    string ISBN, 
                    string BBK, 
                    string Price, 
                    string AddData) {
            if ((Author == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Author));
            }
            if ((AuthorSign == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(AuthorSign));
            }
            if ((MainTitle == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(MainTitle));
            }
            if ((GeneralMaterialDesignation == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(GeneralMaterialDesignation));
            }
            if ((ParallelTitle == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ParallelTitle));
            }
            if ((InformationPertainingToTheTitle == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(InformationPertainingToTheTitle));
            }
            if ((FirstInformationOnLiability == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(FirstInformationOnLiability));
            }
            if ((FurtherInformationOnLiability == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(FurtherInformationOnLiability));
            }
            if ((InformationOnThePublication == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(InformationOnThePublication));
            }
            if ((ParallelInformationAboutThePublication == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(ParallelInformationAboutThePublication));
            }
            if ((FirstInformationOnLiabilityRelatingPublication == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(FirstInformationOnLiabilityRelatingPublication));
            }
            if ((FurtherInformationOnLiabilityRelatingPublication == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(FurtherInformationOnLiabilityRelatingPublication));
            }
            if ((AdditionalInformationAboutPublication == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(AdditionalInformationAboutPublication));
            }
            if ((FirstInformationOnLiabilityRelatingToAdditionalInformationPublication == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(FirstInformationOnLiabilityRelatingToAdditionalInformationPublication));
            }
            if ((FurtherInformationOnLiabilityRelatingToAdditionalInformationPublication == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(FurtherInformationOnLiabilityRelatingToAdditionalInformationPublication));
            }
            if ((PlacePublication == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(PlacePublication));
            }
            if ((FirstPlacePublication == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(FirstPlacePublication));
            }
            if ((SubsequentPlacePublication == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(SubsequentPlacePublication));
            }
            if ((NamePublisherDistributor == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(NamePublisherDistributor));
            }
            if ((InformationAboutFunctionsPublisher == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(InformationAboutFunctionsPublisher));
            }
            if ((DatePublication == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(DatePublication));
            }
            if ((PlaceManufacture == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(PlaceManufacture));
            }
            if ((ManufacturerName == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(ManufacturerName));
            }
            if ((DateManufacture == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(DateManufacture));
            }
            if ((SpecificDesignationMaterialAndVolume == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(SpecificDesignationMaterialAndVolume));
            }
            if ((OtherInformationAboutPhysicalCharacteristics == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(OtherInformationAboutPhysicalCharacteristics));
            }
            if ((Dimensions == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(Dimensions));
            }
            if ((InformationAccompanyingMaterial == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(InformationAccompanyingMaterial));
            }
            if ((TitleSeries == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(TitleSeries));
            }
            if ((ParallelTitleSeries == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(ParallelTitleSeries));
            }
            if ((InformationPertainingTitleSeries == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(InformationPertainingTitleSeries));
            }
            if ((FirstInformationAboutLiabilityRelatedSeries == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(FirstInformationAboutLiabilityRelatedSeries));
            }
            if ((SubsequentLiabilityInformationRelatingSeries == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(SubsequentLiabilityInformationRelatingSeries));
            }
            if ((ISSN == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(ISSN));
            }
            if ((IssueNumberSeries == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(IssueNumberSeries));
            }
            if ((ISBN == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(ISBN));
            }
            if ((BBK == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(BBK));
            }
            if ((Price == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(Price));
            }
            if ((AddData == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(AddData));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Author, 
                    string AuthorSign, 
                    string MainTitle, 
                    string GeneralMaterialDesignation, 
                    string ParallelTitle, 
                    string InformationPertainingToTheTitle, 
                    string FirstInformationOnLiability, 
                    string FurtherInformationOnLiability, 
                    string InformationOnThePublication, 
                    string ParallelInformationAboutThePublication, 
                    string FirstInformationOnLiabilityRelatingPublication, 
                    string FurtherInformationOnLiabilityRelatingPublication, 
                    string AdditionalInformationAboutPublication, 
                    string FirstInformationOnLiabilityRelatingToAdditionalInformationPublication, 
                    string FurtherInformationOnLiabilityRelatingToAdditionalInformationPublication, 
                    string PlacePublication, 
                    string FirstPlacePublication, 
                    string SubsequentPlacePublication, 
                    string NamePublisherDistributor, 
                    string InformationAboutFunctionsPublisher, 
                    string DatePublication, 
                    string PlaceManufacture, 
                    string ManufacturerName, 
                    string DateManufacture, 
                    string SpecificDesignationMaterialAndVolume, 
                    string OtherInformationAboutPhysicalCharacteristics, 
                    string Dimensions, 
                    string InformationAccompanyingMaterial, 
                    string TitleSeries, 
                    string ParallelTitleSeries, 
                    string InformationPertainingTitleSeries, 
                    string FirstInformationAboutLiabilityRelatedSeries, 
                    string SubsequentLiabilityInformationRelatingSeries, 
                    string ISSN, 
                    string IssueNumberSeries, 
                    string ISBN, 
                    string BBK, 
                    string Price, 
                    string AddData, 
                    int Original_id, 
                    int id) {
            if ((Author == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Author));
            }
            if ((AuthorSign == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(AuthorSign));
            }
            if ((MainTitle == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(MainTitle));
            }
            if ((GeneralMaterialDesignation == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(GeneralMaterialDesignation));
            }
            if ((ParallelTitle == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ParallelTitle));
            }
            if ((InformationPertainingToTheTitle == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(InformationPertainingToTheTitle));
            }
            if ((FirstInformationOnLiability == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(FirstInformationOnLiability));
            }
            if ((FurtherInformationOnLiability == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(FurtherInformationOnLiability));
            }
            if ((InformationOnThePublication == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(InformationOnThePublication));
            }
            if ((ParallelInformationAboutThePublication == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(ParallelInformationAboutThePublication));
            }
            if ((FirstInformationOnLiabilityRelatingPublication == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(FirstInformationOnLiabilityRelatingPublication));
            }
            if ((FurtherInformationOnLiabilityRelatingPublication == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(FurtherInformationOnLiabilityRelatingPublication));
            }
            if ((AdditionalInformationAboutPublication == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(AdditionalInformationAboutPublication));
            }
            if ((FirstInformationOnLiabilityRelatingToAdditionalInformationPublication == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(FirstInformationOnLiabilityRelatingToAdditionalInformationPublication));
            }
            if ((FurtherInformationOnLiabilityRelatingToAdditionalInformationPublication == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(FurtherInformationOnLiabilityRelatingToAdditionalInformationPublication));
            }
            if ((PlacePublication == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(PlacePublication));
            }
            if ((FirstPlacePublication == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(FirstPlacePublication));
            }
            if ((SubsequentPlacePublication == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(SubsequentPlacePublication));
            }
            if ((NamePublisherDistributor == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(NamePublisherDistributor));
            }
            if ((InformationAboutFunctionsPublisher == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(InformationAboutFunctionsPublisher));
            }
            if ((DatePublication == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(DatePublication));
            }
            if ((PlaceManufacture == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(PlaceManufacture));
            }
            if ((ManufacturerName == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(ManufacturerName));
            }
            if ((DateManufacture == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(DateManufacture));
            }
            if ((SpecificDesignationMaterialAndVolume == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(SpecificDesignationMaterialAndVolume));
            }
            if ((OtherInformationAboutPhysicalCharacteristics == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(OtherInformationAboutPhysicalCharacteristics));
            }
            if ((Dimensions == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Dimensions));
            }
            if ((InformationAccompanyingMaterial == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(InformationAccompanyingMaterial));
            }
            if ((TitleSeries == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(TitleSeries));
            }
            if ((ParallelTitleSeries == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(ParallelTitleSeries));
            }
            if ((InformationPertainingTitleSeries == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(InformationPertainingTitleSeries));
            }
            if ((FirstInformationAboutLiabilityRelatedSeries == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(FirstInformationAboutLiabilityRelatedSeries));
            }
            if ((SubsequentLiabilityInformationRelatingSeries == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(SubsequentLiabilityInformationRelatingSeries));
            }
            if ((ISSN == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(ISSN));
            }
            if ((IssueNumberSeries == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(IssueNumberSeries));
            }
            if ((ISBN == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(ISBN));
            }
            if ((BBK == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(BBK));
            }
            if ((Price == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Price));
            }
            if ((AddData == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(AddData));
            }
            this.Adapter.UpdateCommand.Parameters[39].Value = ((int)(Original_id));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((int)(id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Author, 
                    string AuthorSign, 
                    string MainTitle, 
                    string GeneralMaterialDesignation, 
                    string ParallelTitle, 
                    string InformationPertainingToTheTitle, 
                    string FirstInformationOnLiability, 
                    string FurtherInformationOnLiability, 
                    string InformationOnThePublication, 
                    string ParallelInformationAboutThePublication, 
                    string FirstInformationOnLiabilityRelatingPublication, 
                    string FurtherInformationOnLiabilityRelatingPublication, 
                    string AdditionalInformationAboutPublication, 
                    string FirstInformationOnLiabilityRelatingToAdditionalInformationPublication, 
                    string FurtherInformationOnLiabilityRelatingToAdditionalInformationPublication, 
                    string PlacePublication, 
                    string FirstPlacePublication, 
                    string SubsequentPlacePublication, 
                    string NamePublisherDistributor, 
                    string InformationAboutFunctionsPublisher, 
                    string DatePublication, 
                    string PlaceManufacture, 
                    string ManufacturerName, 
                    string DateManufacture, 
                    string SpecificDesignationMaterialAndVolume, 
                    string OtherInformationAboutPhysicalCharacteristics, 
                    string Dimensions, 
                    string InformationAccompanyingMaterial, 
                    string TitleSeries, 
                    string ParallelTitleSeries, 
                    string InformationPertainingTitleSeries, 
                    string FirstInformationAboutLiabilityRelatedSeries, 
                    string SubsequentLiabilityInformationRelatingSeries, 
                    string ISSN, 
                    string IssueNumberSeries, 
                    string ISBN, 
                    string BBK, 
                    string Price, 
                    string AddData, 
                    int Original_id) {
            return this.Update(Author, AuthorSign, MainTitle, GeneralMaterialDesignation, ParallelTitle, InformationPertainingToTheTitle, FirstInformationOnLiability, FurtherInformationOnLiability, InformationOnThePublication, ParallelInformationAboutThePublication, FirstInformationOnLiabilityRelatingPublication, FurtherInformationOnLiabilityRelatingPublication, AdditionalInformationAboutPublication, FirstInformationOnLiabilityRelatingToAdditionalInformationPublication, FurtherInformationOnLiabilityRelatingToAdditionalInformationPublication, PlacePublication, FirstPlacePublication, SubsequentPlacePublication, NamePublisherDistributor, InformationAboutFunctionsPublisher, DatePublication, PlaceManufacture, ManufacturerName, DateManufacture, SpecificDesignationMaterialAndVolume, OtherInformationAboutPhysicalCharacteristics, Dimensions, InformationAccompanyingMaterial, TitleSeries, ParallelTitleSeries, InformationPertainingTitleSeries, FirstInformationAboutLiabilityRelatedSeries, SubsequentLiabilityInformationRelatingSeries, ISSN, IssueNumberSeries, ISBN, BBK, Price, AddData, Original_id, Original_id);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private Book2TableAdapter _book2TableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Book2TableAdapter Book2TableAdapter {
            get {
                return this._book2TableAdapter;
            }
            set {
                this._book2TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._book2TableAdapter != null) 
                            && (this._book2TableAdapter.Connection != null))) {
                    return this._book2TableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._book2TableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateUpdatedRows(BooksDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._book2TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Book2.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._book2TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateInsertedRows(BooksDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._book2TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Book2.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._book2TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateDeletedRows(BooksDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._book2TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Book2.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._book2TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public virtual int UpdateAll(BooksDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._book2TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._book2TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager не содержит сведений о подключении. Укажите для каждого адапт" +
                        "ера таблицы TableAdapterManager допустимый экземпляр адаптера таблицы.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("Не удается начать транзакцию. Текущее соединение данных не поддерживает транзакци" +
                        "и или текущее состояние не позволяет начать транзакцию.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._book2TableAdapter != null)) {
                    revertConnections.Add(this._book2TableAdapter, this._book2TableAdapter.Connection);
                    this._book2TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._book2TableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._book2TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._book2TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._book2TableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._book2TableAdapter != null)) {
                    this._book2TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._book2TableAdapter]));
                    this._book2TableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591